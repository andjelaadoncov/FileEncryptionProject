@page "/file-exchange"

@using CryptographyWebApp.Services
@inject FileExchangeService FileExchangeService

<div class="file-exchange-page">
    <div class="file-exchange-container server-section">
        <h3>Server</h3>
        <label>Server Port:</label>
        <input type="number" @bind="ServerPort" />
        <button @onclick="StartServer">Start as Server</button>
    </div>

    <div class="file-exchange-container client-section">
        <h3>Client</h3>
        <label>IP address:</label>
        <input type="text" @bind="ServerIpAddress" placeholder="Enter server IP" />

        <label>Port:</label>
        <input type="number" @bind="ClientPort" />

        <InputFile OnChange="OnFileChange" />
        <button @onclick="SendFile" disabled="@(selectedFilePath == null)">Send File</button>
    </div>
</div>

@code {
    private int ServerPort = 8000;
    private string ServerIpAddress = "127.0.0.1";
    private int ClientPort = 8000;
    private string selectedFilePath;

    private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var tempPath = Path.Combine(Path.GetTempPath(), file.Name); // Čuva originalno ime fajla

        using (var stream = file.OpenReadStream())
        using (var fileStream = File.Create(tempPath))
        {
            await stream.CopyToAsync(fileStream);
        }

        selectedFilePath = tempPath;
        Console.WriteLine($"File selected: {selectedFilePath}");
    }


    private async Task SendFile()
    {
        if (string.IsNullOrEmpty(selectedFilePath))
        {
            Console.WriteLine("No file selected.");
            return;
        }

        await FileExchangeService.SendFile(ServerIpAddress, ClientPort, selectedFilePath);
    }

    private async Task StartServer()
    {
        await FileExchangeService.StartServer(ServerPort);
    }
}
